# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI/CD Pipeline

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "dev", "prod" ] # «апуск при создании pull request, нацеленного на ветку 'dev'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # убедитесь, что глубина репозитория достаточно большая для анализа
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Change directory to solution folder
      run: cd ./ScanPerson
    - name: Clean build artifacts
      run: |
        find . -type d -name "bin" -exec rm -rf {} +
        find . -type d -name "obj" -exec rm -rf {} +
    - name: Clear NuGet cache
      run: dotnet nuget locals all --clear
    - name: Clean solution
      run: dotnet clean ./ScanPerson/ScanPerson.sln
    - name: Restore dependencies
      run: dotnet restore ./ScanPerson/ScanPerson.sln
      
    - name: SonarCloud Scan
      uses: sonarsource/sonarqube-scan-action@v5.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SCAN_PERSON_SONAR_TOKEN }}
          
    - name: Build
      run: dotnet build --no-restore ./ScanPerson/ScanPerson.sln
    - name: Test
      run: |
          dotnet test --no-build --verbosity normal --logger trx --results-directory "./ScanPerson/IntegrationTestResults-${{ matrix.dotnet-version }}" ./ScanPerson/Tests/ScanPerson.Integration.Tests/ScanPerson.Integration.Tests.csproj
          dotnet test --no-build --verbosity normal --logger trx --results-directory "./ScanPerson/UnitTestResults-${{ matrix.dotnet-version }}" ./ScanPerson/Tests/ScanPerson.Unit.Tests/ScanPerson.Unit.Tests.csproj
    - name: Upload dotnet integration test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: ./ScanPerson/IntegrationTestResults-${{ matrix.dotnet-version }}
    - name: Upload dotnet unit test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: ./ScanPerson/UnitTestResults-${{ matrix.dotnet-version }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}