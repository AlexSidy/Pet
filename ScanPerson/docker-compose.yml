services:
  scanperson.ui:
    container_name: scanpersonui
    image: scanpersonui
    restart: "no"
    profiles: [all, ui]
    build:
      context: ./ScanPerson.UI
      dockerfile: Dockerfile
    depends_on:
        - scanperson.webapi
    environment:
        - SCANPERSON_AUTH_API_DOMEN=${SCANPERSON_AUTH_API_DOMEN}
        - SCANPERSON_WEBAPI_DOMEN=${SCANPERSON_WEBAPI_DOMEN}
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        - CHOKIDAR_USEPOLLING=true 
    ports:
        - 4200:4200
    volumes:
        - ./ScanPerson.UI:/app
        - /app/node_modules
    command: ng serve --host 0.0.0.0 --poll 2000 --proxy-config proxy.conf.json
    networks:
        - scanperson-network
      
  scanperson.webapi:
    container_name: scanpersonwebapi
    image: scanpersonwebapi
    restart: "no"
    profiles: [all, webApi, postgres]
    build:
      context: .
      dockerfile: ./ScanPerson.WebApi/Dockerfile
    depends_on:
        - scanpersondb
    environment:
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        - ASPNETCORE_HTTP_PORTS=8080
        - ASPNETCORE_HTTPS_PORTS=8081
        - ASPNETCORE_Kestrel__Certificates__Default__Path=${ASPNETCORE_Kestrel__Certificates__Default__Path}
        - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_Kestrel__Certificates__Default__Password}
        - Allowed_Hosts=${Allowed_Hosts}
        - JWT_OPTIONS_SECRET_KEY=${JWT_OPTIONS_SECRET_KEY}
        - HTMLWEBRU_API_KEY=${HTMLWEBRU_API_KEY}
        - AUTO_MAPPER_LICENSE_KEY=${AUTO_MAPPER_LICENSE_KEY}
    ports:
        - 8080:8080 # HTTP
        - 8081:8081 # HTTPS
    volumes:
        - ./ScanPerson.WebApi/https/cert.pfx:/https/cert.pfx
    networks:
        - scanperson-network

  scanperson.auth.api:
    container_name:  scanpersonauthapi
    image: scanpersonauthapi
    restart: "no"
    profiles: [all, webApi, auth]
    build:
      context: .
      dockerfile: ScanPerson.Auth.Api/Dockerfile
    depends_on:
        - scanpersondb
    environment:
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        - ASPNETCORE_HTTP_PORTS=8090
        - ASPNETCORE_HTTPS_PORTS=8091
        - ASPNETCORE_Kestrel__Certificates__Default__Path=${ASPNETCORE_Kestrel__Certificates__Default__Path}
        - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_Kestrel__Certificates__Default__Password}
        - Allowed_Hosts=${Allowed_Hosts}
        - JWT_OPTIONS_SECRET_KEY=${JWT_OPTIONS_SECRET_KEY}
    ports:
        - 8090:8090
        - 8091:8091
    volumes:
        - ./ScanPerson.Auth.Api/https/cert.pfx:/https/cert.pfx
    networks:
        - scanperson-network

  scanpersondb:
    container_name: scanpersondb
    image: postgres
    restart: "no"
    profiles: [all, postgres, webApi]
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        PGDATA: ${PGDATA}
    ports:
        - 5433:5432
    volumes:
        - postgres:/data/postgres
        - postgres:/var/lib/postgresql/data
    networks:
        - scanperson-network
 
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: "no"
    profiles: [all, postgres, webApi]
    depends_on:
      - scanpersondb
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
        - postgres:/data/postgres
        - pgadmin:/var/lib/pgadmin
    ports:
        - 8000:80
    networks:
        - scanperson-network

networks:
  scanperson-network:
    external: true
    driver: bridge

volumes:
    postgres:
    pgadmin:

      
